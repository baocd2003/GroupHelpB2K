@page
@model WebApp.Pages.StaffPage.OrderManagement.IndexModel

@* @{
    ViewData["Title"] = "Index";
    var prevDisabled = !Model.OrderList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.OrderList.HasNextPage ? "disabled" : "";
} *@
@{
    Layout = "_LayoutStaff";
}
<h1>Index</h1>

<div class="container-fluid py-5">
    <div class="container py-5">
        <div class="table-responsive">
            <a asp-page="Create">Create New</a>
            <form id="filterForm" method="get">
                <p>Sort order status</p>
                <select id="statusFilter" name="selectedStatus" asp-items="Model.OrderStatusOptions" class="form-control">
                    <option value="">--Select filter--</option>
                </select>
            </form>
            @if (Model.OrderList.Count == 0 && !ViewData.ContainsKey("SelectedStatus"))
            {
                <p>Hiện tại không có order nào </p>
            }
            else if (Model.OrderList.Count == 0 && ViewData.ContainsKey("SelectedStatus"))
            {
                <p>Hiện tại không có order nào thuộc tính @ViewData["SelectedStatus"]</p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderList[0].TotalPrice)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderList[0].OrderDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderList[0].DeliveryAddress)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderList[0].PhoneNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderList[0].User.UserName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OrderList[0].OrderStatus)
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderList)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalPrice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OrderDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DeliveryAddress)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.UserName)
                                </td>
                                <form method="post">
                                <td>
                                    <input type="hidden" name="selectedOrderStatus"
                                           id="selectedOrderStatus_@item.OrderId"
                                           value="@item.OrderStatus" />
                                    <select asp-for="@item.OrderStatus"
                                            asp-items="Model.OrderStatusOptions"
                                            onchange="updateSelectedStatus(@item.OrderId, this.value)"
                                            class="form-control">
                                    </select>
                                </td>
                                <td>
                                    <input type="hidden" name="OrderId" value="@item.OrderId" />
                                    <button type="submit" asp-page-handler="UpdateStatus" class="btn btn-link">Update Status</button>
                                </td>
                                </form>
                            </tr>
                        }
                    </tbody>
                </table>

               @*  <a asp-page="./Index"
                   asp-route-pageIndex="@(Model.OrderList.PageIndex - 1)"
                   asp-route-selectedStatus="@ViewData["SelectedStatus"]"
                   class="btn btn-primary @prevDisabled">
                    Previous
                </a>
                <a asp-page="./Index"
                   asp-route-pageIndex="@(Model.OrderList.PageIndex + 1)"
                   asp-route-selectedStatus="@ViewData["SelectedStatus"]"
                   class="btn btn-primary @nextDisabled">
                    Next
                </a> *@
            }
        </div>
    </div>
</div>

<script>
    function updateSelectedStatus(orderId, status) {
        var currStatus = document.getElementById('selectedOrderStatus_' + orderId).value;
        console.log(currStatus);
        console.log(status);
        document.getElementById('selectedOrderStatus_' + orderId).value = status;
        document.getElementById('updateForm_' + orderId).submit();
    }

    document.getElementById('statusFilter').addEventListener('change', function () {
        document.getElementById('filterForm').submit();
    });
</script>
